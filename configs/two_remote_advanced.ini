leader_id = 0;

policy = "socket_rw_oc";  # Determines which system calls may go through 
                          # unchecked.
replication_batch_size = 8192;  # Number of bytes before variants must talk.

#policy = "full";
#replication_batch_size = 0;  # Number of bytes before variants must talk.

#restore_probability = 0.01;  

variants = (
	{ # eiger
		id = 0;
		# address = "128.195.4.134";
		address = "10.0.0.15";
		port = 7773;
		# The following shows an example of how to define
		# breakpoints at which checkpoints will be created: 
		# breakpoints = (
		# 	{ 
		# 		interval = 1;
		# 		# read() in microbenchmarks/read:
		# 		# pc = 0x400664;
		# 		# instr_len = 4;
		# 		# connection_accept() in lighttpd:
		# 		# pc = 0x40de50;
		# 		# instr_len = 4;
		# 		# ngx_event_accept() in nginx:
		# 		# pc = 0x42f8d8;
		# 		# instr_len = 4;
		# 		# acceptTcpHandler() in redis:
		# 		pc = 0x4479d0;
		# 		instr_len = 4;
		# 	}
		# ) 
	},
	{ # blackforest
		id = 1;
		# address = "128.195.4.234";
		address = "10.0.0.30";
		port = 7773;
		# The breakpoint in the other variant is at a different
		# program counter, since this machine runs a different ISA,
		# but the "semantic" location of the breakpoint *must* match
		# the other machine's breakpoint -- in this case, the same
		# function entry point.
		# breakpoints = (
		# 	{
		# 		interval = 1;
		# 		# read() in microbenchmarks/read:
		# 		# pc = 0x4005b2;
		# 		# instr_len = 5;
		# 		# connection_accept() in lighttpd:
		# 		# pc = 0x40e0e0;
		# 		# instr_len = 1; 
		# 		# ngx_event_accept() in nginx:
		# 		# pc = 0x42dff7;
		# 		# instr_len = 2;
		# 		# acceptTcpHandler() in redis:
		# 		pc = 0x447a80;
		# 		instr_len = 2;
		# 	}
		# ) 
	}
);
